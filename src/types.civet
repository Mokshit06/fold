export type Coords = number[]
export type Converter = (x: any) => any;

interface FileMetadata
  file_creator?: string
  file_spec?: number
  file_author?: string
  file_title?: string
  file_classes?: Array<
    ('singleModel' | 'multiModel') | 'animation' | 'diagrams' | string
  >

interface FrameMetadata
  frame_author?: string
  frame_title?: string
  frame_description?: string
  frame_classes?: Array<
    'creasePattern' | 'foldedForm' | 'graph' | 'linkage' | string
  >
  frame_attributes?: Array<
    | ('2D' | '3D')
    | 'abstract'
    | ('manifold' | 'nonManifold')
    | ('orientable' | 'nonOrientable')
    | ('selfTouching' | 'nonSelfTouching')
    | ('selfIntersecting' | 'nonSelfIntersecting')
    | string
  >
  frame_unit?:
    | 'unit'
    | 'in'
    | 'pt'
    | 'm'
    | 'cm'
    | 'mm'
    | 'um'
    | 'nm'

export type Fold = FileMetadata & FrameMetadata &
  edges: Array<[number, number]>
  edges_assignment: Array<string>
  faces: Array<Array<number>>
  faces_vertices: Array<Array<number>>
  faces_edges: Array<Array<number>>
  faces_faces: Array<Array<number>>
  vertices_edges: Array<Array<number>>
  vertices_faces: Array<Array<number>>
  vertices_coords: Coords[]
  vertices_vertices: Array<Array<number>>
  edges_vertices: [u: number, v: number][]
  edges_faces: Array<Array<number>>
  edges_foldAngle: Array<number>
  edges_length: Array<number>
  faces_flatFoldTransform: (number[][] | null)[]
  faces_flatUnfoldTransform: (number[][] | null)[]
  faces_foldTransform: (number[][] | null)[]
  vertices_foldCoords: (number[] | null)[]
  faces_unfoldTransform: (number[][] | null)[]
  vertices_unfoldCoords: (number[] | null)[]
  faces_flatFoldOrientation: (number | null)[]
  vertices_flatFoldCoords: (number[] | null)[]
  vertices_flatUnfoldCoords: Coords[]
  faces_flatUnfoldOrientation: (number | null)[]
  faceOrders: any
